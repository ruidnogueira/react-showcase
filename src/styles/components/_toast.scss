@use '../utils';
@use 'sass:map';

$toast-horizontal-margin: 12px;
$toast-enter-timing: cubic-bezier(0, 1, 1, 1);
$toast-exit-timing: linear;

@keyframes toast-enter-top {
  0% {
    transform: translateY(-100%);
  }

  100% {
    transform: translateY(0%);
  }
}

@keyframes toast-enter-bottom {
  0% {
    transform: translateY(100%);
  }

  100% {
    transform: translateY(0%);
  }
}

@keyframes toast-enter-left {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(0%);
  }
}

@keyframes toast-enter-right {
  0% {
    transform: translateX(100%);
  }

  100% {
    transform: translateX(0%);
  }
}

@keyframes toast-exit {
  0% {
    opacity: 1;
    transform: scale(1);
  }

  100% {
    opacity: 0;
    transform: scale(0.75);
  }
}

:root {
  --toast-enter-duration: 400ms;
  --toast-exit-duration: 200ms;
}

.toast {
  @include utils.theme('light') {
    --toast-color-type-text: var(--theme-color-text-light);
  }

  @include utils.theme('dark') {
    --toast-color-type-text: var(--theme-color-text-dark);
  }

  @include utils.control;
  @include utils.control--auto-height;
  @include utils.overlay-border;

  background-color: var(--theme-color-background-secondary);
  color: var(--theme-color-text);
  display: grid;
  grid-template-columns: auto 1fr auto;
  max-width: calc(100vw - #{2 * $toast-horizontal-margin});
  min-width: utils.px-to-rem(300px);
  pointer-events: auto;
  z-index: utils.$z-index-toast;

  &--enter {
    animation-fill-mode: forwards;

    .toast-section--top & {
      animation: toast-enter-top var(--toast-enter-duration) $toast-enter-timing;
    }

    .toast-section--bottom & {
      animation: toast-enter-bottom var(--toast-enter-duration) $toast-enter-timing;
    }

    .toast-section--top-left &,
    .toast-section--bottom-left & {
      animation: toast-enter-left var(--toast-enter-duration) $toast-enter-timing;
    }

    .toast-section--top-right &,
    .toast-section--bottom-right & {
      animation: toast-enter-right var(--toast-enter-duration) $toast-enter-timing;
    }
  }

  &--exit {
    animation: toast-exit var(--toast-exit-duration) $toast-exit-timing forwards;
  }

  &--success,
  &--failure {
    border: none;
    color: var(--toast-color-type-text);
  }

  &--success {
    background-color: var(--theme-color-positive);
  }

  &--failure {
    background-color: var(--theme-color-negative);
  }
}

.toast__title {
  font-weight: bold;
  grid-column: 2;
}

.toast__message {
  grid-column: 2;
}

.toast__icon {
  align-items: center;
  display: inline-flex;
  font-size: var(--theme-font-size-8);
  margin-right: var(--theme-spacing-3);
}

.toast__close-button {
  grid-area: 1 / 3;
  margin-left: var(--theme-spacing-3);
}

.toast-section {
  display: flex;
  flex-direction: column;
  pointer-events: none;
  position: fixed;
  z-index: utils.$z-index-toast;

  &--top {
    flex-direction: column-reverse;
    left: env(safe-area-inset-left, 0);
    right: env(safe-area-inset-right, 0);
    top: env(safe-area-inset-top, 0);
  }

  &--top-left {
    flex-direction: column-reverse;
    left: env(safe-area-inset-left, 0);
    top: env(safe-area-inset-top, 0);
  }

  &--top-right {
    flex-direction: column-reverse;
    right: env(safe-area-inset-right, 0);
    top: env(safe-area-inset-top, 0);
  }

  &--bottom {
    bottom: env(safe-area-inset-top, 0);
    left: env(safe-area-inset-left, 0);
    right: env(safe-area-inset-right, 0);
  }

  &--bottom-left {
    bottom: env(safe-area-inset-top, 0);
    left: env(safe-area-inset-left, 0);
  }

  &--bottom-right {
    bottom: env(safe-area-inset-top, 0);
    right: env(safe-area-inset-right, 0);
  }
}

.toast-container {
  align-items: center;
  display: flex;
  justify-content: center;
  padding: var(--theme-spacing-3);
}
